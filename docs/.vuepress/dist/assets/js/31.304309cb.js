(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{203:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"创建不存在的目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建不存在的目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建不存在的目录")]),t._v(" "),a("h4",{attrs:{id:"mkdir-p-parents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mkdir-p-parents","aria-hidden":"true"}},[t._v("#")]),t._v(" mkdir -p.  parents")]),t._v(" "),a("p",[t._v("如： mkdir -p xx/bb/cc")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".\n└─ xx\n   └─ bb\n      ├─ cc\n")])])]),a("h2",{attrs:{id:"生成tree-tree-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成tree-tree-text","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成tree tree.text")]),t._v(" "),a("h4",{attrs:{id:"tree-i-node-modules-tree-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-i-node-modules-tree-txt","aria-hidden":"true"}},[t._v("#")]),t._v(" tree -I 'node_modules' >tree.txt")]),t._v(" "),a("h2",{attrs:{id:"获取端口-占用的-pid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取端口-占用的-pid","aria-hidden":"true"}},[t._v("#")]),t._v(" 获取端口 占用的 pid")]),t._v(" "),a("h4",{attrs:{id:"netstat-tunlp-grep-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#netstat-tunlp-grep-port","aria-hidden":"true"}},[t._v("#")]),t._v(" netstat -tunlp|grep {port}")]),t._v(" "),a("h2",{attrs:{id:"杀死进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杀死进程","aria-hidden":"true"}},[t._v("#")]),t._v(" 杀死进程")]),t._v(" "),a("h4",{attrs:{id:"kill-9-pid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kill-9-pid","aria-hidden":"true"}},[t._v("#")]),t._v(" kill -9 {pid}")])])},[],!1,null,null,null);e.default=s.exports}}]);